version: '3.8'

services:
  # Backend service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: biz_manage_pro_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=development
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/biz_manage_pro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=your-secret-key-here
      - SESSION_SECRET_KEY=your-session-secret-here
      - ALLOWED_ORIGINS=http://localhost:5173,http://localhost:5174
    volumes:
      - ./backend:/app
      - backend-logs:/app/logs
      - backend-uploads:/app/uploads
      - backend-backups:/app/backups
    depends_on:
      - db
      - redis
    networks:
      - biz_manage_pro_network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: biz_manage_pro_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - biz_manage_pro_network

  # PostgreSQL database
  db:
    image: postgres:14-alpine
    container_name: biz_manage_pro_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=biz_manage_pro
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - biz_manage_pro_network

  # Redis cache
  redis:
    image: redis:6-alpine
    container_name: biz_manage_pro_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - biz_manage_pro_network

  # pgAdmin (Database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: biz_manage_pro_pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - biz_manage_pro_network

  # Prometheus (Metrics)
  prometheus:
    image: prom/prometheus
    container_name: biz_manage_pro_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - biz_manage_pro_network

  # Grafana (Visualization)
  grafana:
    image: grafana/grafana
    container_name: biz_manage_pro_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - biz_manage_pro_network

# Volumes
volumes:
  postgres-data:
  redis-data:
  pgadmin-data:
  prometheus-data:
  grafana-data:
  backend-logs:
  backend-uploads:
  backend-backups:

# Networks
networks:
  biz_manage_pro_network:
    driver: bridge 